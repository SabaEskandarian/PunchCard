Punch card scheme with curve25519-dalek

Performance Results (computer)
Each operation is repeated for 1000 iterations, except punches, which are done 10000 times (10 punches per iteration). 
The server database starts with 0 used punchcards in each iteration. 
Numbers are cumulative over all runs, in microseconds.
Server setup: 18590
Client setup: 65722
Server punch: 1343669
Client punch: 3123742
Client redeem: 65837
Server redeem: 64278

so the averages are (in microseconds):
Server setup: 18.590
Client setup: 65.722
Server punch: 134.3669
Client punch: 312.3742
Client redeem: 65.837
Server redeem: 64.278

When I increased the starting database size to 1M, I got these numbers
Server setup: 27371
Client setup: 85662
Server punch: 1562951
Client punch: 3497363
Client redeem: 73585
Server redeem: 72136
The only one whose performance should be affected by the database size is server redeem, but it does not look different relative to the other numbers (the results are generally high variance). This is not surprising because the only DB-dependent operation is the hash table lookup. 


Performance Results (Google Pixel)
Each operation is repeated for 1000 iterations, except punches, which are done 10000 times (10 punches per iteration). 
The server database starts with 0 used punchcards in each iteration. 
Numbers are cumulative over all runs, in microseconds.
Server setup: 304114
Client setup: 939123
Server punch: 19388147
Client punch: 43142327
Client redeem: 889866
Server redeem: 949928

so the averages are (in microseconds):
Server setup: 304.114
Client setup: 939.123
Server punch: 1938.8147
Client punch: 4314.2327
Client redeem: 889.866
Server redeem: 949.928


Communication costs (for messages sent in protocol)
Server setup: 32 bytes (g^secret)
Client setup: none
Client punch: 32 bytes (the punchcard group element)
Server punch: 128 bytes (new group element and proof which has 2 group elements and a scalar, 32 bytes each)
Client redeem: 64 bytes (the final card and the secret used to make the card, 32 bytes each)
Server redeem: none


Time for lookup in hashset of 1 million entries is <1 microsecond (about .2-.3 microseconds)
Time for exponentiation is about 50 microseconds (usually between 50 and 55)
so to do 1M exponentiations (one for each previously used card) would probably be about 50 seconds. The speedup is about 8 orders of magnitude. 

Punch card scheme with pairing-plus (BLS12-381) 

Performance Results for BLS12_381 group with merging (computer)
Each operation is repeated for 100 iterations, except punches, which are done 1000 times (10 punches per iteration). 
The server database starts with 0 used punchcards in each iteration. 
Numbers are cumulative over all runs, in microseconds.
Server setup: 109839
Client setup: 278976
Server punch: 4327845
Client punch: 10851089
Client redeem: 305215
Server redeem: 400271

so the averages are (in _milliseconds_):
Server setup: 1.09
Client setup: 2.79
Server punch: 4.33
Client punch: 10.85
Client redeem: 3.05
Server redeem: 4.00

Performance Results for BLS12_381 group with merging (Google Pixel)
Each operation is repeated for 100 iterations, except punches, which are done 1000 times (10 punches per iteration). 
The server database starts with 0 used punchcards in each iteration. 
Numbers are cumulative over all runs, in microseconds.
Server setup: 1332493
Client setup: 3496631
Server punch: 54449731
Client punch: 137793866
Client redeem: 3643494
Server redeem: 4810848

so the averages are (in _milliseconds_):
Server setup: 13.32
Client setup: 34.97
Server punch: 54.45
Client punch: 137.79
Client redeem: 36.43
Server redeem: 48.11

Communication costs (for messages sent in protocol)
Server setup: 144 bytes (g^secret for both groups == 48 + 96)
Client setup: none
Client punch: 144 bytes (the 2 punchcard group elements)
Server punch: 496 bytes (2 new group elements and 2 proofs which have 2 group elements and a scalar = 144 + (96 + 32) + (192 + 32) = 496)
Client redeem: 640 bytes (the final card and the secrets used to make the cards, 32 bytes each secret, 576 bytes for final card)
Server redeem: none
